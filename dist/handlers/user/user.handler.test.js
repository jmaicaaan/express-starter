'use strict';

var assert = require('assert');
var app = require('../../../dist/app');
var models = require('../../../models');
var bluebird = require('bluebird');
var server = require('supertest')(app);

describe('#User', function () {
  var createdUser = void 0;
  before(function () {
    return models.sequelize.sync().then(function () {
      return bluebird.all([models.User.destroy({ truncate: true })]);
    }).then(function () {
      return models.User.create({ username: 'user123', password: 'Password123' }).then(function (user) {
        return user.get();
      });
    }).then(function (user) {
      createdUser = user;
    });
  });

  describe('#User Creation', function () {
    it('should add a user', function (done) {
      var username = 'JM Santos';
      server.post('/user/').send({ username: username }).expect(200).end(function (err, res) {
        assert.equal(res.body.username, username);
        done(err);
      });
    });
  });

  describe('#User Login', function () {
    it('should allow user to login', function (done) {
      server.post('/user/login').send({ username: createdUser.username, password: createdUser.password }).expect(200).end(function (err, res) {
        assert.equal(res.body.username, createdUser.username);
        done(err);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwcC9oYW5kbGVycy91c2VyL3VzZXIuaGFuZGxlci50ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJhcHAiLCJtb2RlbHMiLCJibHVlYmlyZCIsInNlcnZlciIsImRlc2NyaWJlIiwiY3JlYXRlZFVzZXIiLCJiZWZvcmUiLCJzZXF1ZWxpemUiLCJzeW5jIiwidGhlbiIsImFsbCIsIlVzZXIiLCJkZXN0cm95IiwidHJ1bmNhdGUiLCJjcmVhdGUiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidXNlciIsImdldCIsIml0IiwiZG9uZSIsInBvc3QiLCJzZW5kIiwiZXhwZWN0IiwiZW5kIiwiZXJyIiwicmVzIiwiZXF1YWwiLCJib2R5Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVNDLFFBQVEsUUFBUixDQUFmO0FBQ0EsSUFBTUMsTUFBTUQsUUFBUSxtQkFBUixDQUFaO0FBQ0EsSUFBTUUsU0FBU0YsUUFBUSxpQkFBUixDQUFmO0FBQ0EsSUFBTUcsV0FBV0gsUUFBUSxVQUFSLENBQWpCO0FBQ0EsSUFBTUksU0FBU0osUUFBUSxXQUFSLEVBQXFCQyxHQUFyQixDQUFmOztBQUVBSSxTQUFTLE9BQVQsRUFBa0IsWUFBTTtBQUN0QixNQUFJQyxvQkFBSjtBQUNBQyxTQUFPLFlBQU07QUFDWCxXQUFPTCxPQUFPTSxTQUFQLENBQWlCQyxJQUFqQixHQUNKQyxJQURJLENBQ0MsWUFBTTtBQUNWLGFBQU9QLFNBQVNRLEdBQVQsQ0FBYSxDQUNsQlQsT0FBT1UsSUFBUCxDQUFZQyxPQUFaLENBQW9CLEVBQUVDLFVBQVUsSUFBWixFQUFwQixDQURrQixDQUFiLENBQVA7QUFHRCxLQUxJLEVBTUpKLElBTkksQ0FNQyxZQUFNO0FBQ1YsYUFBT1IsT0FBT1UsSUFBUCxDQUFZRyxNQUFaLENBQW1CLEVBQUVDLFVBQVUsU0FBWixFQUF1QkMsVUFBVSxhQUFqQyxFQUFuQixFQUNKUCxJQURJLENBQ0M7QUFBQSxlQUFRUSxLQUFLQyxHQUFMLEVBQVI7QUFBQSxPQURELENBQVA7QUFFRCxLQVRJLEVBVUpULElBVkksQ0FVQyxVQUFDUSxJQUFELEVBQVU7QUFDZFosb0JBQWNZLElBQWQ7QUFDRCxLQVpJLENBQVA7QUFhRCxHQWREOztBQWdCQWIsV0FBUyxnQkFBVCxFQUEyQixZQUFNO0FBQy9CZSxPQUFHLG1CQUFILEVBQXdCLFVBQUNDLElBQUQsRUFBVTtBQUNoQyxVQUFJTCxXQUFXLFdBQWY7QUFDQVosYUFDR2tCLElBREgsQ0FDUSxRQURSLEVBRUdDLElBRkgsQ0FFUSxFQUFFUCxrQkFBRixFQUZSLEVBR0dRLE1BSEgsQ0FHVSxHQUhWLEVBSUdDLEdBSkgsQ0FJTyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQjVCLGVBQU82QixLQUFQLENBQWFELElBQUlFLElBQUosQ0FBU2IsUUFBdEIsRUFBZ0NBLFFBQWhDO0FBQ0FLLGFBQUtLLEdBQUw7QUFDRCxPQVBIO0FBUUQsS0FWRDtBQVdELEdBWkQ7O0FBY0FyQixXQUFTLGFBQVQsRUFBd0IsWUFBTTtBQUM1QmUsT0FBRyw0QkFBSCxFQUFpQyxVQUFDQyxJQUFELEVBQVU7QUFDekNqQixhQUNHa0IsSUFESCxDQUNRLGFBRFIsRUFFR0MsSUFGSCxDQUVRLEVBQUVQLFVBQVVWLFlBQVlVLFFBQXhCLEVBQWtDQyxVQUFVWCxZQUFZVyxRQUF4RCxFQUZSLEVBR0dPLE1BSEgsQ0FHVSxHQUhWLEVBSUdDLEdBSkgsQ0FJTyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQjVCLGVBQU82QixLQUFQLENBQWFELElBQUlFLElBQUosQ0FBU2IsUUFBdEIsRUFBZ0NWLFlBQVlVLFFBQTVDO0FBQ0FLLGFBQUtLLEdBQUw7QUFDRCxPQVBIO0FBUUQsS0FURDtBQVVELEdBWEQ7QUFZRCxDQTVDRCIsImZpbGUiOiJ1c2VyLmhhbmRsZXIudGVzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xyXG5jb25zdCBhcHAgPSByZXF1aXJlKCcuLi8uLi8uLi9kaXN0L2FwcCcpO1xyXG5jb25zdCBtb2RlbHMgPSByZXF1aXJlKCcuLi8uLi8uLi9tb2RlbHMnKTtcclxuY29uc3QgYmx1ZWJpcmQgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xyXG5jb25zdCBzZXJ2ZXIgPSByZXF1aXJlKCdzdXBlcnRlc3QnKShhcHApO1xyXG5cclxuZGVzY3JpYmUoJyNVc2VyJywgKCkgPT4ge1xyXG4gIGxldCBjcmVhdGVkVXNlcjtcclxuICBiZWZvcmUoKCkgPT4ge1xyXG4gICAgcmV0dXJuIG1vZGVscy5zZXF1ZWxpemUuc3luYygpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICByZXR1cm4gYmx1ZWJpcmQuYWxsKFtcclxuICAgICAgICAgIG1vZGVscy5Vc2VyLmRlc3Ryb3koeyB0cnVuY2F0ZTogdHJ1ZSB9KVxyXG4gICAgICAgIF0pO1xyXG4gICAgICB9KVxyXG4gICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIG1vZGVscy5Vc2VyLmNyZWF0ZSh7IHVzZXJuYW1lOiAndXNlcjEyMycsIHBhc3N3b3JkOiAnUGFzc3dvcmQxMjMnIH0pXHJcbiAgICAgICAgICAudGhlbih1c2VyID0+IHVzZXIuZ2V0KCkpO1xyXG4gICAgICB9KVxyXG4gICAgICAudGhlbigodXNlcikgPT4ge1xyXG4gICAgICAgIGNyZWF0ZWRVc2VyID0gdXNlcjtcclxuICAgICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIGRlc2NyaWJlKCcjVXNlciBDcmVhdGlvbicsICgpID0+IHtcclxuICAgIGl0KCdzaG91bGQgYWRkIGEgdXNlcicsIChkb25lKSA9PiB7XHJcbiAgICAgIGxldCB1c2VybmFtZSA9ICdKTSBTYW50b3MnO1xyXG4gICAgICBzZXJ2ZXJcclxuICAgICAgICAucG9zdCgnL3VzZXIvJylcclxuICAgICAgICAuc2VuZCh7IHVzZXJuYW1lIH0pXHJcbiAgICAgICAgLmV4cGVjdCgyMDApXHJcbiAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcclxuICAgICAgICAgIGFzc2VydC5lcXVhbChyZXMuYm9keS51c2VybmFtZSwgdXNlcm5hbWUpO1xyXG4gICAgICAgICAgZG9uZShlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIGRlc2NyaWJlKCcjVXNlciBMb2dpbicsICgpID0+IHtcclxuICAgIGl0KCdzaG91bGQgYWxsb3cgdXNlciB0byBsb2dpbicsIChkb25lKSA9PiB7XHJcbiAgICAgIHNlcnZlclxyXG4gICAgICAgIC5wb3N0KCcvdXNlci9sb2dpbicpXHJcbiAgICAgICAgLnNlbmQoeyB1c2VybmFtZTogY3JlYXRlZFVzZXIudXNlcm5hbWUsIHBhc3N3b3JkOiBjcmVhdGVkVXNlci5wYXNzd29yZCB9KVxyXG4gICAgICAgIC5leHBlY3QoMjAwKVxyXG4gICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XHJcbiAgICAgICAgICBhc3NlcnQuZXF1YWwocmVzLmJvZHkudXNlcm5hbWUsIGNyZWF0ZWRVc2VyLnVzZXJuYW1lKTtcclxuICAgICAgICAgIGRvbmUoZXJyKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTsiXX0=