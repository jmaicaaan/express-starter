'use strict';

var _index = require('../services/index');

var _util = require('../lib/util');

var RouteMiddleware;

RouteMiddleware = function RouteMiddleware() {
  this.accessTokenService = new _index.AccessTokenService();
  this.util = new _util.Util();
};

RouteMiddleware.prototype.acl = function (req, res, next) {
  if (hasAccessToken(req, this.util)) {
    var accessToken = this.util.getAccessToken(req);
    return validateAccessToken(this.accessTokenService, accessToken).then(function (valid) {
      if (valid) {
        return next();
      }
      return unauthorizedError(err, next);
    });
  } else {
    var error = this.util.unauthorizedError(res);
    return next(error);
  }
};

// Helpers

function hasAccessToken(req, util) {
  if (!req && !req.headers) {
    return false;
  }
  var accessToken = util.getAccessToken(req);
  return accessToken ? true : false;
}

function validateAccessToken(accessTokenService, accessToken) {
  return accessTokenService.getUserByAccessToken(accessToken).then(function (user) {
    if (user && user.get()) {
      return true;
    }
    return false;
  });
}

module.exports.RouteMiddleware = RouteMiddleware;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2FwcC9taWRkbGV3YXJlcy9yb3V0ZS5taWRkbGV3YXJlLmpzIl0sIm5hbWVzIjpbIlJvdXRlTWlkZGxld2FyZSIsImFjY2Vzc1Rva2VuU2VydmljZSIsInV0aWwiLCJwcm90b3R5cGUiLCJhY2wiLCJyZXEiLCJyZXMiLCJuZXh0IiwiaGFzQWNjZXNzVG9rZW4iLCJhY2Nlc3NUb2tlbiIsImdldEFjY2Vzc1Rva2VuIiwidmFsaWRhdGVBY2Nlc3NUb2tlbiIsInRoZW4iLCJ2YWxpZCIsInVuYXV0aG9yaXplZEVycm9yIiwiZXJyIiwiZXJyb3IiLCJoZWFkZXJzIiwiZ2V0VXNlckJ5QWNjZXNzVG9rZW4iLCJ1c2VyIiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFFQSxJQUFJQSxlQUFKOztBQUVBQSxrQkFBa0IsMkJBQVc7QUFDM0IsT0FBS0Msa0JBQUwsR0FBMEIsK0JBQTFCO0FBQ0EsT0FBS0MsSUFBTCxHQUFZLGdCQUFaO0FBQ0QsQ0FIRDs7QUFLQUYsZ0JBQWdCRyxTQUFoQixDQUEwQkMsR0FBMUIsR0FBZ0MsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2RCxNQUFJQyxlQUFlSCxHQUFmLEVBQW9CLEtBQUtILElBQXpCLENBQUosRUFBb0M7QUFDbEMsUUFBTU8sY0FBYyxLQUFLUCxJQUFMLENBQVVRLGNBQVYsQ0FBeUJMLEdBQXpCLENBQXBCO0FBQ0EsV0FBT00sb0JBQW9CLEtBQUtWLGtCQUF6QixFQUE2Q1EsV0FBN0MsRUFDSkcsSUFESSxDQUNDLFVBQUNDLEtBQUQsRUFBVztBQUNmLFVBQUlBLEtBQUosRUFBVztBQUNULGVBQU9OLE1BQVA7QUFDRDtBQUNELGFBQU9PLGtCQUFrQkMsR0FBbEIsRUFBdUJSLElBQXZCLENBQVA7QUFDSCxLQU5NLENBQVA7QUFPRCxHQVRELE1BU087QUFDTCxRQUFNUyxRQUFRLEtBQUtkLElBQUwsQ0FBVVksaUJBQVYsQ0FBNEJSLEdBQTVCLENBQWQ7QUFDQSxXQUFPQyxLQUFLUyxLQUFMLENBQVA7QUFDRDtBQUNGLENBZEQ7O0FBZ0JBOztBQUVBLFNBQVNSLGNBQVQsQ0FBd0JILEdBQXhCLEVBQTZCSCxJQUE3QixFQUFtQztBQUNqQyxNQUFJLENBQUNHLEdBQUQsSUFBUSxDQUFDQSxJQUFJWSxPQUFqQixFQUEwQjtBQUN4QixXQUFPLEtBQVA7QUFDRDtBQUNELE1BQU1SLGNBQWNQLEtBQUtRLGNBQUwsQ0FBb0JMLEdBQXBCLENBQXBCO0FBQ0EsU0FBT0ksY0FBYyxJQUFkLEdBQXFCLEtBQTVCO0FBQ0Q7O0FBRUQsU0FBU0UsbUJBQVQsQ0FBNkJWLGtCQUE3QixFQUFpRFEsV0FBakQsRUFBOEQ7QUFDNUQsU0FBT1IsbUJBQW1CaUIsb0JBQW5CLENBQXdDVCxXQUF4QyxFQUNKRyxJQURJLENBQ0MsVUFBQ08sSUFBRCxFQUFVO0FBQ2QsUUFBSUEsUUFBUUEsS0FBS0MsR0FBTCxFQUFaLEVBQXdCO0FBQ3RCLGFBQU8sSUFBUDtBQUNEO0FBQ0QsV0FBTyxLQUFQO0FBQ0QsR0FOSSxDQUFQO0FBT0Q7O0FBRURDLE9BQU9DLE9BQVAsQ0FBZXRCLGVBQWYsR0FBaUNBLGVBQWpDIiwiZmlsZSI6InJvdXRlLm1pZGRsZXdhcmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY2Nlc3NUb2tlblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9pbmRleCc7XHJcbmltcG9ydCB7IFV0aWwgfSBmcm9tICcuLi9saWIvdXRpbCc7XHJcblxyXG52YXIgUm91dGVNaWRkbGV3YXJlO1xyXG5cclxuUm91dGVNaWRkbGV3YXJlID0gZnVuY3Rpb24oKSB7XHJcbiAgdGhpcy5hY2Nlc3NUb2tlblNlcnZpY2UgPSBuZXcgQWNjZXNzVG9rZW5TZXJ2aWNlKCk7XHJcbiAgdGhpcy51dGlsID0gbmV3IFV0aWwoKTtcclxufTtcclxuXHJcblJvdXRlTWlkZGxld2FyZS5wcm90b3R5cGUuYWNsID0gZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICBpZiAoaGFzQWNjZXNzVG9rZW4ocmVxLCB0aGlzLnV0aWwpKSB7XHJcbiAgICBjb25zdCBhY2Nlc3NUb2tlbiA9IHRoaXMudXRpbC5nZXRBY2Nlc3NUb2tlbihyZXEpO1xyXG4gICAgcmV0dXJuIHZhbGlkYXRlQWNjZXNzVG9rZW4odGhpcy5hY2Nlc3NUb2tlblNlcnZpY2UsIGFjY2Vzc1Rva2VuKVxyXG4gICAgICAudGhlbigodmFsaWQpID0+IHtcclxuICAgICAgICBpZiAodmFsaWQpIHtcclxuICAgICAgICAgIHJldHVybiBuZXh0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1bmF1dGhvcml6ZWRFcnJvcihlcnIsIG5leHQpO1xyXG4gICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnN0IGVycm9yID0gdGhpcy51dGlsLnVuYXV0aG9yaXplZEVycm9yKHJlcyk7XHJcbiAgICByZXR1cm4gbmV4dChlcnJvcik7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gSGVscGVyc1xyXG5cclxuZnVuY3Rpb24gaGFzQWNjZXNzVG9rZW4ocmVxLCB1dGlsKSB7XHJcbiAgaWYgKCFyZXEgJiYgIXJlcS5oZWFkZXJzKSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG4gIGNvbnN0IGFjY2Vzc1Rva2VuID0gdXRpbC5nZXRBY2Nlc3NUb2tlbihyZXEpO1xyXG4gIHJldHVybiBhY2Nlc3NUb2tlbiA/IHRydWUgOiBmYWxzZTtcclxufVxyXG5cclxuZnVuY3Rpb24gdmFsaWRhdGVBY2Nlc3NUb2tlbihhY2Nlc3NUb2tlblNlcnZpY2UsIGFjY2Vzc1Rva2VuKSB7XHJcbiAgcmV0dXJuIGFjY2Vzc1Rva2VuU2VydmljZS5nZXRVc2VyQnlBY2Nlc3NUb2tlbihhY2Nlc3NUb2tlbilcclxuICAgIC50aGVuKCh1c2VyKSA9PiB7XHJcbiAgICAgIGlmICh1c2VyICYmIHVzZXIuZ2V0KCkpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMuUm91dGVNaWRkbGV3YXJlID0gUm91dGVNaWRkbGV3YXJlOyJdfQ==